<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<!--//네임스페이스에는 mapper 가 있는 풀 패키지명과 매퍼명을 등록 한다. -->
<mapper namespace="com.utime.burrowNest.user.mapper.UserMapper">

	<insert id="createUserGroup">
		CREATE TABLE BN_USER_GROUP (
			NO INT PRIMARY KEY AUTO_INCREMENT
			, REG_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP <!-- 생성일 -->
			, UPDATE_DATE TIMESTAMP NOT NULL <!-- 수정일 -->
			, ENABLED BOOLEAN DEFAULT 'N' <!-- 사용 여부 -->
			, NAME VARCHAR(128) NOT NULL <!-- 이름 -->
			, ROLE VARCHAR(16) NOT NULL <!-- 권한 -->
			, NOTE VARCHAR(255) DEFAULT NULL <!-- 비고 -->
			, DAILY_UPLOAD_LIMIT BIGINT DEFAULT 0 <!-- 하루 업로드 제한 (byte) -->
			, DAILY_DOWNLOAD_LIMIT BIGINT DEFAULT 0  <!-- 일일 최대 다운로드 용량 -->
			, MAX_STORAGE_USAGE BIGINT DEFAULT 0 <!-- 저장공간 최대 사용 용량 -->
		)
	</insert>
	
	
	<!-- 어드민 그룹 -->
	<insert id="insertGroup" parameterType="com.utime.burrowNest.user.vo.GroupVo" 
		useGeneratedKeys="true"  keyColumn="NO" keyProperty="groupNo">
		INSERT INTO BN_USER_GROUP (
			UPDATE_DATE
			, ENABLED 
			, NAME 
			, ROLE
			<if test="note != null and note != '' "> 
			, NOTE
			</if>
			, DAILY_UPLOAD_LIMIT 
			, DAILY_DOWNLOAD_LIMIT 
			, MAX_STORAGE_USAGE  
		) VALUES (
			CURRENT_TIMESTAMP
			, TRUE
			, #{name}
			, #{role}
			<if test="note != null and note != '' "> 
			, #{note}
			</if>
			, #{dailyUploadLimit}
			, #{dailyDownloadLimit} 
			, #{maxStorageUsage}
		)
	</insert>
	
	<insert id="createUser">
		CREATE TABLE BN_USER (
			NO INT PRIMARY KEY AUTO_INCREMENT
			, REG_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP <!-- 생성일 -->
			, UPDATE_DATE TIMESTAMP NOT NULL <!-- 수정일 -->
			, ENABLED BOOLEAN DEFAULT 'N' <!-- 사용 여부 -->
			, GROUP_NO INT NOT NULL <!-- 사용자 그룹 번호 --> 
			, ID VARCHAR(32) NOT NULL <!-- ID -->
			, NICK_NAME VARCHAR(128) NOT NULL <!-- 별명 -->
			, ROLE VARCHAR(16) NOT NULL <!-- 권한 -->
			, NOTE VARCHAR(255) DEFAULT NULL <!-- 비고 -->
			, AUTH_HINT VARCHAR(64) DEFAULT NULL <!-- 계정 찾기 힌트 (이름 + 질문1 + 질문2 + 질문3: 해쉬) -->
			, DAILY_UPLOAD_LIMIT BIGINT DEFAULT 0 <!-- 하루 업로드 제한 (byte) -->
			, DAILY_DOWNLOAD_LIMIT BIGINT DEFAULT 0  <!-- 일일 최대 다운로드 용량 -->
			, MAX_STORAGE_USAGE BIGINT DEFAULT 0 <!-- 저장공간 최대 사용 용량 -->
			, FOREIGN KEY(GROUP_NO) REFERENCES BN_USER_GROUP(NO)
		)
	</insert>
	
	<insert id="createProfileImg">
		CREATE TABLE BN_USER_PROFILE_IMG (
			USER_NO INT PRIMARY KEY 
			, UPDATE_DATE TIMESTAMP NOT NULL <!-- 수정일 -->
			, PROFILE_IMG BINARY VARYING(307200) NOT NULL <!-- 아이콘 이미지  -->
			, FOREIGN KEY(USER_NO) REFERENCES BN_USER(NO) ON DELETE CASCADE
		)
	</insert>
	
	<insert id="createUserPw">
		CREATE TABLE BN_USER_PW (
			USER_NO INT PRIMARY KEY 
			, UPDATE_DATE TIMESTAMP NOT NULL <!-- 수정일 -->
			, AUTH_VALUE VARCHAR(128) NOT NULL <!-- 비번 -->
			, FAIL_COUNT TINYINT DEFAULT 0 <!-- 암호 틀린 횟수 -->
			, FOREIGN KEY(USER_NO) REFERENCES BN_USER(NO) ON DELETE CASCADE
		)
	</insert>
	
	<!-- 로그인 기록 -->
	<insert id="createLoginRecord">
		CREATE TABLE BN_USER_LOGIN_RECORD (
			NO INT PRIMARY KEY AUTO_INCREMENT
			, REG_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP <!-- 생성일 -->
			, IP VARCHAR(32) NOT NULL
			, USER_AGENT VARCHAR(255) NOT NULL
			, STATUS VARCHAR(32) NOT NULL
			, REQ_ID VARCHAR(32) NOT NULL <!-- 요청 ID -->
			, USER_NO INT DEFAULT -1
		)
	</insert>
	
	<!-- 사용자 추가 -->
	<insert id="insertUser" parameterType="com.utime.burrowNest.user.vo.UserVo" 
		useGeneratedKeys="true" keyProperty="userNo" keyColumn="NO" >
		INSERT INTO BN_USER (
			UPDATE_DATE 
			, ENABLED
			, GROUP_NO
			, ID 
			, NICK_NAME 
			, ROLE
			, AUTH_HINT
			, DAILY_UPLOAD_LIMIT 
			, DAILY_DOWNLOAD_LIMIT 
			, MAX_STORAGE_USAGE 
		) VALUES (
			CURRENT_TIMESTAMP
			, #{enabled}
			, #{group.groupNo}
			, #{id}
			, #{nickname}
			, #{group.role}
			, #{authHint}
			, #{group.dailyUploadLimit}
			, #{group.dailyDownloadLimit}
			, #{group.maxStorageUsage}
		)
	</insert>
	
	<insert id="insertUserProfileImg">
		INSERT INTO BN_USER_PROFILE_IMG (
			USER_NO
			, UPDATE_DATE
			, PROFILE_IMG
		)VALUES (
			#{userNo}
			, CURRENT_TIMESTAMP
			, #{profileImg, jdbcType=VARBINARY} 
		)
	</insert>

	<!-- 로그인 기록 추가 -->
	<insert id="insertLoginRecord" parameterType="map">
		INSERT INTO BN_USER_LOGIN_RECORD (
			IP
			<if test="req.userAgent != null and req.userAgent != '' ">
				,USER_AGENT
			</if>
			,STATUS
			,REQ_ID
			<if test="user != null ">
				,USER_NO
			</if>
		) VALUES (
			#{req.ip}
			<if test="req.userAgent != null and req.userAgent != '' ">
				,#{req.userAgent}
			</if>
			,#{status}
			,#{req.id}
			<if test="user != null ">
				,#{user.userNo}
			</if>
		)
	</insert>
	
	<sql id="GroupColumn">
		GR.NO AS "groupNo"
		, GR.REG_DATE 
		, GR.UPDATE_DATE 
		, GR.ENABLED 
		, GR.NAME 
		, GR.ROLE 
		, GR.NOTE 
		, GR.DAILY_UPLOAD_LIMIT
		, GR.DAILY_DOWNLOAD_LIMIT
		, GR.MAX_STORAGE_USAGE
	</sql>
	
	<sql id="UserColumn">
		UR.NO AS USER_NO
		, UR.REG_DATE
		, UR.ENABLED
		, UR.GROUP_NO
		, UR.ID 
		, UR.NICK_NAME 
		, UR.ROLE
	</sql>
	
	<sql id="UserAllColumn">
		<include refid="com.utime.burrowNest.user.mapper.UserMapper.UserColumn"/>
		, UR.UPDATE_DATE 
		, UR.NOTE 
		, UR.AUTH_HINT 
		, UR.DAILY_UPLOAD_LIMIT 
		, UR.DAILY_DOWNLOAD_LIMIT 
		, UR.MAX_STORAGE_USAGE
	</sql>
	
	<resultMap id="UserVoMap" type="com.utime.burrowNest.user.vo.UserVo">
		<id column="USER_NO" property="userNo"/>
		<result column="REG_DATE" property="regDate"/>
		<result column="ENABLED" property="enabled"/>
		<result column="ID" property="id"/>
		<result column="NICK_NAME" property="nickname"/>
		<result column="ROLE" property="role"/>
		<result column="UPDATE_DATE" property="updateDate"/>
		<result column="NOTE" property="note"/>
		<result column="AUTH_HINT" property="authHint"/>
		<result column="DAILY_UPLOAD_LIMIT" property="dailyUploadLimit"/>
		<result column="DAILY_DOWNLOAD_LIMIT" property="dailyDownloadLimit"/>
		<result column="MAX_STORAGE_USAGE" property="maxStorageUsage"/>
		<association 
			column="{groupNo=GROUP_NO}" 
			property="group" 
			javaType="com.utime.burrowNest.user.vo.GroupVo"
			select="com.utime.burrowNest.user.mapper.UserMapper.selectGroupByNo" />
	</resultMap>
	
	<select id="selectGroupByNo" resultType="com.utime.burrowNest.user.vo.GroupVo">
		SELECT
			<include refid="GroupColumn" /> 
		FROM BN_USER_GROUP GR
		WHERE GR.NO = #{groupNo}
	</select>

	<!-- 사용자 그룹 조회 -->
	<select id="selectGroupByName" parameterType="map" resultType="com.utime.burrowNest.user.vo.GroupVo">
		SELECT
			<include refid="GroupColumn" />
		FROM BN_USER_GROUP GR
		WHERE GR.NAME = #{name}
	</select>
	
	<!-- id 조회 -->	
	<select id="selectUserId" parameterType="map" resultMap="UserVoMap">
		SELECT 
			<include refid="UserColumn" /> 
		FROM BN_USER UR 
			INNER JOIN BN_USER_PW PW
				ON UR.NO = PW.USER_NO
		WHERE UR.ID = #{id} AND PW.FAIL_COUNT <![CDATA[ <= ]]> 5
	</select>
	
	<!-- 기본 회원 정보 조회 -->
	<select id="selectUserIdBasic" parameterType="map" resultMap="UserVoMap">
		SELECT 
			<include refid="UserAllColumn" /> 
		FROM BN_USER UR
		WHERE 1=1
			AND UR.ENABLED = true
			AND UR.ID = #{id} 
	</select>

	<!-- pw 조회 -->	
	<select id="selectUserPw" parameterType="map" resultType="String">
		SELECT 
			 AUTH_VALUE
		FROM BN_USER_PW PW 
			INNER JOIN BN_USER UR ON PW.USER_NO = UR.NO
		WHERE UR.ID = #{id}
	</select>
	
	<!-- pw 추가 -->	
	<update id="insertUserPw" parameterType="map">
		INSERT INTO BN_USER_PW (
			USER_NO
			, UPDATE_DATE
			, AUTH_VALUE
		) VALUES (
			#{user.userNo}
			, CURRENT_TIMESTAMP
			, #{pw, typeHandler=com.utime.burrowNest.user.typeHandler.PasswordEncoderTypeHandler}
		)  
	</update>
	
	<!-- pw 수정. -->
	<update id="updateUserPw" parameterType="map">
		UPDATE BN_USER_PW SET 
			UPDATE_DATE = CURRENT_TIMESTAMP
			, AUTH_VALUE = #{pw, typeHandler=com.utime.burrowNest.user.typeHandler.PasswordEncoderTypeHandler}
		WHERE USER_NO = #{user.userNo}
	</update>
	
	<!-- 사용자 정보 갱신 -->
	<update id="updateUser" parameterType="com.utime.burrowNest.user.vo.UserVo" >
		UPDATE BN_USER SET
			UPDATE_DATE = CURRENT_TIMESTAMP
			, NICK_NAME = #{nickname}
		WHERE NO = #{userNo}
	</update>
	
	<update id="updateUserProfileImg">
		UPDATE BN_USER_PROFILE_IMG SET
			UPDATE_DATE = CURRENT_TIMESTAMP
			, PROFILE_IMG = #{profileImg, jdbcType=VARBINARY}
		WHERE USER_NO = #{userNo}
	</update>
	
	<!-- PW 성공 여부 횟수 업데이트 -->
	<update id="updatePwCount" parameterType="map">
		UPDATE BN_USER_PW SET
			UPDATE_DATE = CURRENT_TIMESTAMP
			, FAIL_COUNT = <choose> <when test="isSuccess">0</when> <otherwise>FAIL_COUNT + 1</otherwise> </choose>
		WHERE USER_NO = #{user.userNo}
	</update>
	
	<!-- 힌트로 계정 찾기 -->
	<select id="findUser" parameterType="map" resultType="com.utime.burrowNest.user.vo.UserVo">
		SELECT 
			<include refid="UserColumn"/>
		FROM BN_USER UR
		WHERE 1=1
			AND UR.ENABLED = TRUE
			AND UR.ID = #{id} 
			AND UR.AUTH_HINT = #{authHint}
	</select>
	
	<!-- id 사용 여부 -->
	<select id="checkId" parameterType="map" resultType="boolean">
		SELECT 
			CASE COUNT(1) 
	   			WHEN 1 THEN 1
				ELSE 0
	   		END AS RES
	   	FROM BN_USER UR
		WHERE 1=1
			AND UR.ENABLED = TRUE
			AND UR.ID = #{id} 
	</select>
	
	<!-- 사용자 프로필 이미지 -->
	<select id="selectProfileImg" parameterType="map" resultMap="com.utime.burrowNest.common.mapper.CommonMapper.BinResultVoMap">
		SELECT
			PROFILE_IMG AS BIN_DATA
		FROM BN_USER_PROFILE_IMG 
		WHERE USER_NO = #{userNo}
	</select>
	
</mapper>